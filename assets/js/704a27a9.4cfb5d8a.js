"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[946],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=l(n),m=i,f=s["".concat(p,".").concat(m)]||s[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=s;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9554:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return s},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],c={sidebar_position:2},p="Accept Input Attribute",l={unversionedId:"inline_admin/accept",id:"inline_admin/accept",title:"Accept Input Attribute",description:"Like as the Widget accept attribute, see reference here, we have an way to customize the accept of the ImageUploaderInline. To customize it, use the accept property inside an class that inherits from ImageUploaderInline, like:",source:"@site/docs/inline_admin/accept.md",sourceDirName:"inline_admin",slug:"/inline_admin/accept",permalink:"/django-image-uploader-widget/docs/inline_admin/accept",editUrl:"https://github.com/inventare/django-image-uploader-widget/blob/main/docs/docs/inline_admin/accept.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Tutorial",permalink:"/django-image-uploader-widget/docs/inline_admin/tutorial"},next:{title:"Colors",permalink:"/django-image-uploader-widget/docs/customization/colors"}},u=[],d={toc:u};function s(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accept-input-attribute"},"Accept Input Attribute"),(0,a.kt)("p",null,"Like as the Widget ",(0,a.kt)("inlineCode",{parentName:"p"},"accept")," attribute, see ",(0,a.kt)("a",{parentName:"p",href:"/django-image-uploader-widget/docs/widget/accept"},"reference here"),", we have an way to customize the accept of the ",(0,a.kt)("inlineCode",{parentName:"p"},"ImageUploaderInline"),". To customize it, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"accept")," property inside an class that inherits from ",(0,a.kt)("inlineCode",{parentName:"p"},"ImageUploaderInline"),", like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from image_uploader_widget.admin import ImageUploaderInline\nfrom . import models\n\nclass InlineEditor(ImageUploaderInline):\n    model = models.InlineItem\n    accept = "image/jpeg"\n')))}s.isMDXComponent=!0}}]);